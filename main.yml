---
- name: Configuring za machine
  hosts: localhost
  connection: local
  become: yes
  roles:
    - role: "roles/customize-browser"
    - role: "roles/tmux-config"

  vars:
    apt_tools:
      - golang
      - neo4j
      - jq
      - gobuster
      - libkrb5-dev
      - krb5-user
      - libreoffice
      - dnsx
      - subjack
      - s3scanner
      - python3-requests
      - python3-daemon
      - python3-pyfiglet
      - python3-fuzzywuzzy
      - python3-tld
      - python3-mechanize
      - python3-termcolor
      - python3-ratelimit
      - python3-pycryptodome
      - pipx

    pipx_tools:
      - git+https://github.com/ly4k/Certipy.git
      - git+https://github.com/aniqfakhrul/powerview.py
      - git+https://github.com/Pennyw0rth/NetExec
      - git+https://github.com/CravateRouge/bloodyAD.git
      - git+https://github.com/gatariee/minrm.git
      - git+https://github.com/dirkjanm/adidnsdump.git
      - git+https://github.com/0xInfection/XSRFProbe.git
      - git+https://github.com/Raghavd3v/CRLFsuite.git
      - defaultcreds-cheat-sheet
      - git-dumper

    git_tools:
      - name: BaldHead
        repo: https://github.com/ahmadallobani/BaldHead.git
        dest: /opt/BaldHead

      - name: psexecsvc
        repo: https://github.com/sensepost/susinternals.git
        dest: /opt/psexecsvc

      - name: SharpCollection
        repo: https://github.com/Flangvik/ObfuscatedSharpCollection.git
        dest: /opt/SharpCollection
        post_install: "mv NetFramework_4.7_Any/* . && rm -rf NetFramework_4.7_Any README.md && for f in *._obf.exe; do mv -- \"$f\" \"${f//._obf.exe/}\"; done"

      - name: gMSADumper
        repo: https://github.com/micahvandeusen/gMSADumper.git
        dest: /opt/gMSADumper
        post_install: "mv gMSADumper.py gMSADumper && chmod +x gMSADumper && ln -s /opt/gMSADumper/gMSADumper /usr/bin/gMSADumper"

      - name: targetedKerberoast
        repo: https://github.com/ShutdownRepo/targetedKerberoast.git
        dest: /opt/targetedKerberoast
        post_install: "mv targetedKerberoast.py targetedKerberoast && chmod +x targetedKerberoast && ln -s /opt/targetedKerberoast/targetedKerberoast /usr/bin/targetedKerberoast"

      - name: SecLists
        repo: https://github.com/danielmiessler/SecLists.git
        dest: /opt/SecLists

      - name: PreCompiledBinaries
        repo: https://github.com/jakobfriedl/precompiled-binaries.git
        dest: /opt/PreCompiledBinaries

      - name: BugCrown Subdomain Enumeration
        repo: https://github.com/appsecco/bugcrowd-levelup-subdomain-enumeration.git
        dest: /opt/subdomain-enum-bugcrown-levelup

      - name: Fuzz.txt
        repo: https://github.com/Bo0oM/fuzz.txt.git
        dest: /opt/fuzz.txt

      - name: Commix
        repo: https://github.com/commixproject/commix.git
        dest: /opt/commix

      - name: Corsy
        repo: https://github.com/s0md3v/Corsy.git
        dest: /opt/corsy

      - name: Liffy
        repo: https://github.com/mzfr/liffy.git
        dest: /opt/liffy

      - name: Smuggler
        repo: https://github.com/defparam/smuggler.git
        dest: /opt/smuggler

      - name: XSStrike
        repo: https://github.com/s0md3v/XSStrike.git
        dest: /opt/xsstrike

      - name: SSTIMap
        repo: https://github.com/vladko312/SSTImap.git
        dest: /opt/sstimap

      - name: jwt_tool
        repo: https://github.com/ticarpi/jwt_tool.git
        dest: /opt/jwt_tool

    tool_base_paths:
      - /opt/pspy
      - /opt/ligolo
      - /opt/chisel
      - /opt/peass
      - /opt/BloodHound

    url_tools:
      - name: Pspy
        url: https://github.com/DominicBreuker/pspy/releases/download/v1.2.1/pspy64
        dest: /opt/pspy/pspy64
        dir: /opt/pspy/

      - name: Ligolo Windows Agent
        url: https://github.com/nicocha30/ligolo-ng/releases/download/v0.8.2/ligolo-ng_agent_0.8.2_windows_amd64.zip
        dest: /opt/ligolo/agent.zip
        dir: /opt/ligolo/
        post_install: "unzip -o agent.zip && rm agent.zip"

      - name: Ligolo Linux Agent
        url: https://github.com/nicocha30/ligolo-ng/releases/download/v0.8.2/ligolo-ng_agent_0.8.2_linux_amd64.tar.gz
        dest: /opt/ligolo/agent.tar.gz
        dir: /opt/ligolo/
        post_install: "tar -xvf agent.tar.gz && rm agent.tar.gz"

      - name: Ligolo Proxy
        url: https://github.com/nicocha30/ligolo-ng/releases/download/v0.8.2/ligolo-ng_proxy_0.8.2_linux_amd64.tar.gz
        dest: /opt/ligolo/proxy.tar.gz
        dir: /opt/ligolo/
        post_install: "tar -xvf proxy.tar.gz && rm proxy.tar.gz"

      - name: Chisel Linux
        url: https://github.com/jpillora/chisel/releases/download/v1.10.1/chisel_1.10.1_linux_amd64.gz
        dest: /opt/chisel/chisel.gz
        dir: /opt/chisel/
        post_install: "gunzip chisel.gz && chmod +x chisel"

      - name: Chisel Windows
        url: https://github.com/jpillora/chisel/releases/download/v1.10.1/chisel_1.10.1_windows_amd64.gz
        dest: /opt/chisel/chisel.exe.gz
        dir: /opt/chisel/
        post_install: "gunzip chisel.exe.gz"

      - name: Linpeas
        url: https://github.com/peass-ng/PEASS-ng/releases/download/20250601-88c7a0f6/linpeas.sh
        dest: /opt/peass/linpeas.sh
        dir: /opt/peass/
        post_install: "chmod +x linpeas.sh"

      - name: Winpeas
        url: https://github.com/peass-ng/PEASS-ng/releases/download/20250601-88c7a0f6/winPEAS.bat
        dest: /opt/peass/winpeas.bat
        dir: /opt/peass/

      - name: Bloodhound
        url: https://github.com/SpecterOps/BloodHound-Legacy/releases/download/v4.3.1/BloodHound-linux-x64.zip
        dest: /opt/BloodHound.zip
        dir: /opt/
        post_install: "unzip -o BloodHound.zip && mv BloodHound-linux-x64 BloodHound && rm BloodHound.zip"

    go_tools:
      - name: Kerbrute
        repo: github.com/ropnop/kerbrute@master

      - name: Headi
        repo: github.com/mlcsec/headi@latest

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Remove Netexec (if system package exists)
      ansible.builtin.package:
        name: netexec
        state: absent

    - name: Install apt tools
      ansible.builtin.package:
        name: "{{ apt_tools }}"
        state: present

    - name: Ensuring tool base directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop: "{{ tool_base_paths }}"

    - name: Install pipx tools
      ansible.builtin.shell: "pipx install {{ item }}"
      loop: "{{ pipx_tools }}"
      args:
        executable: /bin/bash

    - name: Ensure pipx path
      ansible.builtin.shell: "pipx ensurepath"
      args:
        executable: /bin/bash

    - name: Download tools from URL
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: '0755'
      loop: "{{ url_tools }}"

    - name: Run URL post-install commands
      ansible.builtin.shell: "{{ item.post_install }}"
      args:
        chdir: "{{ item.dir }}"
        executable: /bin/bash
      when: item.post_install is defined and item.post_install != ""
      loop: "{{ url_tools }}"

    - name: Install git tools
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        update: yes
      loop: "{{ git_tools }}"

    - name: Run git post-install commands
      ansible.builtin.shell: "{{ item.post_install }}"
      args:
        chdir: "{{ item.dest }}"
        executable: /bin/bash
      when: item.post_install is defined and item.post_install != ""
      loop: "{{ git_tools }}"

    - name: Unzip rockyou wordlist
      ansible.builtin.shell: "gunzip -f /usr/share/wordlists/rockyou.txt.gz"
      args:
        creates: /usr/share/wordlists/rockyou.txt

    - name: Install Go tools
      ansible.builtin.shell: "go install {{ item.repo }}"
      loop: "{{ go_tools }}"
      environment:
        GOPATH: "/root/go"
        GOBIN: "/root/go/bin"
      args:
        creates: "/root/go/bin/{{ item.name | lower }}"
                                                          
    - name: Ensure Go tools path in /root/.zshrc
      ansible.builtin.lineinfile:
        path: /root/.zshrc
        line: 'export PATH="$PATH:/root/go/bin"'
        create: yes
        insertafter: EOF
        state: present